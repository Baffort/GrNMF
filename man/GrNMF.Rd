% Generated by roxygen2 (4.0.2): do not edit by hand
\name{GrNMF}
\alias{GrNMF}
\title{GrNMF is an R/C++ implementation of Non-negative Matrix Factorization on Manifold}
\usage{
GrNMF(Xr, Wr, k = 5L, lambda = 100L, n_iter = 5000L, converge = 1e-06)
}
\arguments{
\item{Xr}{an p by n numeric matrix with each column being a feature vector, and each row being a sample vector}

\item{Wr}{a symmetric numeric matrix (p by p) with 1 iff xi/xj are nearest neighbors (you decide/compute this in advance, 11 is a good neighbor threshold) on a graph, and 0 otherwise.}

\item{k}{the number of inner dimensions (reduced features, or 'rank') to use for the NMF algorithm}

\item{lambda}{the weight to give to the Wr matrix in the NMF minimization. Lambda=0 means standard NMF (Lee's 2001 algorithm).}

\item{n_iter}{the number of optimization loop iterations.}

\item{converge}{threshold for convergence test for early termination. Negative values deactivate this feature.}
}
\value{
a list of \code{U},
  (sometimes called \code{W}) and \code{V}
  (sometimes called \code{H}) for the NNLS fit.
  \code{Max.iter} which stores the maximum iteration before NMF converged
  Additionally the standard NMF objective
  function fit is returned as \code{ObjectiveFit}.
}
\description{
\code{GrNMF} Graphically constrained NMF
}
\examples{
# generate a synthetic dataset with known classes: 50 features, 23 samples (10+5+8)
\dontrun{
library(NMF)
n <- 100; counts <- c(10, 7, 3);
p <- sum(counts)
x <- syntheticNMF(n, counts)
dim(x)
# build the true cluster membership
groups <- unlist(mapply(rep, seq(counts), counts))
# run on a data.frame
set.seed(10)
system.time(res <- nmf(data.frame(x), 3, nmfAlgorithm("lee"), "random"))
resid=data.frame(x)- (res@fit@W \%*\% res@fit@H)
norm(as.matrix(resid),'F')

# Now do the same for GrNMF
adj2=matrix(1,p,p)
set.seed(10)

# turn off the graphical part for this comparison
# by setting lambda to 0
system.time(res2<-GrNMF(x,adj2,lambda=0,k=3))
res2$ObjectiveFit
}
}
\seealso{
\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.167.3428}{Non-negative Matrix Factorization on Manifold}
}

